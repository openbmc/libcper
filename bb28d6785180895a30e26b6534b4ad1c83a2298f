{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "dfff9e70_9a8f2415",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 10,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-11-12T17:56:49Z",
      "side": 1,
      "message": "nit, \"users\"",
      "range": {
        "startLine": 10,
        "startChar": 14,
        "endLine": 10,
        "endChar": 22
      },
      "revId": "bb28d6785180895a30e26b6534b4ad1c83a2298f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "de67baa5_57849b15",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 10,
      "author": {
        "id": 1000945
      },
      "writtenOn": "2024-11-13T00:21:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "dfff9e70_9a8f2415",
      "range": {
        "startLine": 10,
        "startChar": 14,
        "endLine": 10,
        "endChar": 22
      },
      "revId": "bb28d6785180895a30e26b6534b4ad1c83a2298f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b285a347_d7ec911a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 11,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-11-12T17:56:49Z",
      "side": 1,
      "message": "what is \"none-json\"?",
      "range": {
        "startLine": 11,
        "startChar": 24,
        "endLine": 11,
        "endChar": 33
      },
      "revId": "bb28d6785180895a30e26b6534b4ad1c83a2298f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "093f518e_ceac9772",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 11,
      "author": {
        "id": 1000945
      },
      "writtenOn": "2024-11-13T00:21:52Z",
      "side": 1,
      "message": "Example:\nThe third application or pldmd can implement the its CPER\ndecoder to extract the CPER `typeID`, `subtype` and others `context info` to log those info to Ipmitool SEL Log. In this case, the application needs specific data fields in CPER data to log to Ipmi SEL log but not all of CPER in Json format.\n\nEven, if the `pldmd` call the cper-parser to decode the CPER data to\njson format, it still needs the definition in the `cper-section*` header\nto find the `typeID`, `subtype` fields in the json format depends on the\nCPER type.",
      "parentUuid": "b285a347_d7ec911a",
      "range": {
        "startLine": 11,
        "startChar": 24,
        "endLine": 11,
        "endChar": 33
      },
      "revId": "bb28d6785180895a30e26b6534b4ad1c83a2298f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "89e51a56_2c8fc579",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 11,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-11-13T00:31:03Z",
      "side": 1,
      "message": "\u003e Example:\n\u003e The third application or pldmd can implement the its CPER\n\u003e decoder to extract the CPER `typeID`, `subtype` and others `context info` to log those info to Ipmitool SEL Log. In this case, the application needs specific data fields in CPER data to log to Ipmi SEL log but not all of CPER in Json format.\n\u003e \n\u003e Even, if the `pldmd` call the cper-parser to decode the CPER data to\n\u003e json format, it still needs the definition in the `cper-section*` header\n\u003e to find the `typeID`, `subtype` fields in the json format depends on the\n\u003e CPER type.\n\nI\u0027m not following why, if it used json, it would need those header files.  between the json schema and json, it should be able to parse out what\u0027s needed into its own structs.\n\nWith that said, being able to parse to a struct does seem useful, I would just prefer it not be the structs that exist in the headers.  Things like pragma packed and other things aren\u0027t portable between binaries, so if we want to publish a header-interface into libcper, lets make it specific to libcper.",
      "parentUuid": "093f518e_ceac9772",
      "range": {
        "startLine": 11,
        "startChar": 24,
        "endLine": 11,
        "endChar": 33
      },
      "revId": "bb28d6785180895a30e26b6534b4ad1c83a2298f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f8840685_763aeaf9",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 14,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-11-12T17:56:49Z",
      "side": 1,
      "message": "These files aren\u0027t really intended to be part of the user-facing API.  Can you get some more details on what you\u0027re trying to accomplish here, and we can see about adding the appropriate headers for it?\n\nI also worry about only installing some of the headers, without a clear indication as to why these were singled out.  We likely should be doing all or none.",
      "revId": "bb28d6785180895a30e26b6534b4ad1c83a2298f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b43fff6c_a6f3d3f2",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 14,
      "author": {
        "id": 1000945
      },
      "writtenOn": "2024-11-13T00:21:52Z",
      "side": 1,
      "message": "As my understanding, currently, `libcper` is intended to public the `cper-parser` and `cper-generator` user APIs to allow others application call those API to format the CPER data to JSON format or from Json format to CPER data.\nI wonder in the case, Ampere wants to log the IPMI SEL log event to identify the typeID, SubType, and some other CPER data to IPMI OEM SEL log how can we achieve that?\n[1] https://gerrit.openbmc.org/c/openbmc/pldm/+/73237/11/oem/ampere/event/cper.cpp#57\n[2] https://gerrit.openbmc.org/c/openbmc/pldm/+/73237/11/oem/ampere/event/cper.cpp#164\nCan you take a look on those codes if I can\u0027t explain my idea clearly?\n\nOR\n\nMaybe, Some definitions in `cper_section*` need to be moved to Cper.h to achieve that.",
      "parentUuid": "f8840685_763aeaf9",
      "revId": "bb28d6785180895a30e26b6534b4ad1c83a2298f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7d60d6fc_f220a7c1",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 14,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-11-13T00:31:03Z",
      "side": 1,
      "message": "I suspect if we want to publish a header interface, we need to reorganize how our headers are done.  The headers you\u0027re trying to publish are the wire format, and are used internally.  Maybe we should just publish the c_json object itself instead of the serialized string?  Then users can look up whatever field they like?",
      "parentUuid": "b43fff6c_a6f3d3f2",
      "revId": "bb28d6785180895a30e26b6534b4ad1c83a2298f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}