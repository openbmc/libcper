{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "451754d5_d683d224",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 14,
      "author": {
        "id": 1001049
      },
      "writtenOn": "2024-09-29T05:08:23Z",
      "side": 1,
      "message": "Tested section?",
      "revId": "93760490bf335d7fa2e533a109e06a929fd4210a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "243e8a9f_521b7cfe",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 14,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-10-04T15:45:56Z",
      "side": 1,
      "message": "We have unit tests on this repo that are run automatically with pretty good coverage, and not a lot of functional tests that can be run at this point.",
      "parentUuid": "451754d5_d683d224",
      "revId": "93760490bf335d7fa2e533a109e06a929fd4210a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4acf3ea3_31951f6f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1001049
      },
      "writtenOn": "2024-09-29T05:08:23Z",
      "side": 1,
      "message": "Looks good to me.",
      "revId": "93760490bf335d7fa2e533a109e06a929fd4210a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b2a30c0a_cc2a1c0b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000411
      },
      "writtenOn": "2024-09-29T09:26:38Z",
      "side": 1,
      "message": "Changes look good to me.",
      "revId": "93760490bf335d7fa2e533a109e06a929fd4210a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b1bfd8f8_ad16fab1",
        "filename": "sections/cper-section-arm.c",
        "patchSetId": 2
      },
      "lineNbr": 200,
      "author": {
        "id": 1002160
      },
      "writtenOn": "2024-09-29T15:37:31Z",
      "side": 1,
      "message": "why are we printing to output? is this going to abort the conversion to json? otherwise it will mess up the output json (if idea is to silently suppress this field)\n\nthat said, why is this change even needed? a similar thing is done for the section as a whole (if we donâ€™t know the GUID, an unknown section with data is added to the json)",
      "revId": "93760490bf335d7fa2e533a109e06a929fd4210a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b8fd9501_808d1d32",
        "filename": "sections/cper-section-arm.c",
        "patchSetId": 2
      },
      "lineNbr": 200,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-09-30T14:23:48Z",
      "side": 1,
      "message": "If you\u0027re going to print, it needs to be to stderr.  There are existing printfs but we shouldn\u0027t add new ones.",
      "parentUuid": "b1bfd8f8_ad16fab1",
      "revId": "93760490bf335d7fa2e533a109e06a929fd4210a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fa6bfabb_a86d6ed0",
        "filename": "sections/cper-section-arm.c",
        "patchSetId": 2
      },
      "lineNbr": 200,
      "author": {
        "id": 1001322
      },
      "writtenOn": "2024-09-30T17:03:29Z",
      "side": 1,
      "message": "Do we really need this print? if not, its good to avoid.",
      "revId": "93760490bf335d7fa2e533a109e06a929fd4210a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "456a6da6_8a374b91",
        "filename": "sections/cper-section-arm.c",
        "patchSetId": 2
      },
      "lineNbr": 200,
      "author": {
        "id": 1002169
      },
      "writtenOn": "2024-10-01T01:47:45Z",
      "side": 1,
      "message": "An empty errorInformation field should be invalid and logged",
      "parentUuid": "fa6bfabb_a86d6ed0",
      "revId": "93760490bf335d7fa2e533a109e06a929fd4210a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f8959e2d_6f478db5",
        "filename": "sections/cper-section-arm.c",
        "patchSetId": 2
      },
      "lineNbr": 200,
      "author": {
        "id": 1002169
      },
      "writtenOn": "2024-10-01T01:47:45Z",
      "side": 1,
      "message": "changed to stderr\n@karthik how would this change the output json? error_info_ir is what we care about, right?",
      "parentUuid": "b8fd9501_808d1d32",
      "revId": "93760490bf335d7fa2e533a109e06a929fd4210a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1b5c9d9a_cb0519f6",
        "filename": "sections/cper-section-arm.c",
        "patchSetId": 2
      },
      "lineNbr": 200,
      "author": {
        "id": 1002160
      },
      "writtenOn": "2024-10-01T02:23:49Z",
      "side": 1,
      "message": "In this path, \"errorInformation\" property would be missing altogether \u0026 since it is a required property for \"errorInfo\" (array), the schema-validation would fail.\n\nThere could be a compromise output instead of failing validation:\n\"errorInformation\": { \"unknownErr\": { \"data\": \u003cvalue\u003e }}}",
      "parentUuid": "f8959e2d_6f478db5",
      "revId": "93760490bf335d7fa2e533a109e06a929fd4210a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f432c052_17f85e07",
        "filename": "sections/cper-section-arm.c",
        "patchSetId": 2
      },
      "lineNbr": 200,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-10-01T02:31:31Z",
      "side": 1,
      "message": "I don\u0027t know what this code is doing w.r.t. the resulting JSON; I don\u0027t really care about that in this case, except hopefully your `break` here returns some kind of error code. \n\nThe problem, as I see it, is that you\u0027re polluting the callers stdout from within a library.  If someone did something like:\n\n```\nint main()\n{\n   ...\n   std::cout \u003c\u003c libcper_json().to_string() \u003c\u003c std::endl;\n   ...\n}\n```\n\nYou\u0027ve now completely messed up their program output in a way that it isn\u0027t valid JSON anymore.  (I know this API isn\u0027t right, but is just an illustration).\n\nLibraries should never print to `stdout`.",
      "parentUuid": "1b5c9d9a_cb0519f6",
      "revId": "93760490bf335d7fa2e533a109e06a929fd4210a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "23c51d18_6bfabea1",
        "filename": "sections/cper-section-arm.c",
        "patchSetId": 2
      },
      "lineNbr": 200,
      "author": {
        "id": 1002160
      },
      "writtenOn": "2024-10-01T02:32:41Z",
      "side": 1,
      "message": "\u003e\"errorInformation\" property would be missing altogether\nor possibly \"errrorInformation\": null (error_subinfo would be NULL when it gets added to error_info_ir - please make sure this won\u0027t cause a crash!)",
      "parentUuid": "1b5c9d9a_cb0519f6",
      "revId": "93760490bf335d7fa2e533a109e06a929fd4210a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "11dccc15_603fce1d",
        "filename": "sections/cper-section-arm.c",
        "patchSetId": 2
      },
      "lineNbr": 200,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-10-04T15:45:56Z",
      "side": 1,
      "message": "printing appears to have been removed in the latest patch.",
      "parentUuid": "23c51d18_6bfabea1",
      "revId": "93760490bf335d7fa2e533a109e06a929fd4210a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "80016472_456e76c5",
        "filename": "sections/cper-section-arm.c",
        "patchSetId": 2
      },
      "lineNbr": 200,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-10-04T15:45:56Z",
      "side": 1,
      "message": "Printing appears removed.",
      "parentUuid": "456a6da6_8a374b91",
      "revId": "93760490bf335d7fa2e533a109e06a929fd4210a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ac069a71_9918fd40",
        "filename": "sections/cper-section-arm.c",
        "patchSetId": 2
      },
      "lineNbr": 200,
      "author": {
        "id": 1002169
      },
      "writtenOn": "2024-10-04T16:04:40Z",
      "side": 1,
      "message": "Presently, section-json code population is structured in a way that we return nested json objects at multiple levels. There is no good way to propagate error codes and I think this, along with getting rid of other stdout prints can be addressed in a separate change.",
      "parentUuid": "23c51d18_6bfabea1",
      "revId": "93760490bf335d7fa2e533a109e06a929fd4210a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a9cdc1eb_4285ed48",
        "filename": "specification/json/sections/cper-arm-processor.json",
        "patchSetId": 2
      },
      "lineNbr": 322,
      "author": {
        "id": 1001322
      },
      "writtenOn": "2024-09-30T17:03:29Z",
      "side": 1,
      "message": "Nit: run clang formatting",
      "revId": "93760490bf335d7fa2e533a109e06a929fd4210a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "eda9a595_fcdd48de",
        "filename": "specification/json/sections/cper-arm-processor.json",
        "patchSetId": 2
      },
      "lineNbr": 322,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-10-01T00:32:26Z",
      "side": 1,
      "message": "This is json.... clang formatting doesn\u0027t apply, json formatting might, but that\u0027s run as part of CI.",
      "parentUuid": "a9cdc1eb_4285ed48",
      "revId": "93760490bf335d7fa2e533a109e06a929fd4210a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "252abf3e_44f401f5",
        "filename": "specification/json/sections/cper-arm-processor.json",
        "patchSetId": 2
      },
      "lineNbr": 361,
      "author": {
        "id": 1001322
      },
      "writtenOn": "2024-09-30T17:03:29Z",
      "side": 1,
      "message": "{\n                                \"type\": \"object\",\n                                \"required\": [\"data\"],\n                                \"additionalProperties\": false,\n                                \"properties\": {\n                                    \"data\": {\n                                        \"type\": \"integer\"\n                                    }\n\nremoving this part is intentional? any specific reason?",
      "revId": "93760490bf335d7fa2e533a109e06a929fd4210a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "157623b0_3055f1ec",
        "filename": "specification/json/sections/cper-arm-processor.json",
        "patchSetId": 2
      },
      "lineNbr": 361,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-10-01T00:32:26Z",
      "side": 1,
      "message": "That type is not present in the cper spec, and appeared to be just a debug print.",
      "parentUuid": "252abf3e_44f401f5",
      "revId": "93760490bf335d7fa2e533a109e06a929fd4210a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d454afa8_b97a12c2",
        "filename": "specification/json/sections/cper-arm-processor.json",
        "patchSetId": 2
      },
      "lineNbr": 361,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-10-04T15:46:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "157623b0_3055f1ec",
      "revId": "93760490bf335d7fa2e533a109e06a929fd4210a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}