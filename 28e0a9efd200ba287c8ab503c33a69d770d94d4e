{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "5f6b0181_84fce1dd",
        "filename": "meson.build",
        "patchSetId": 2
      },
      "lineNbr": 140,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-10-16T22:01:08Z",
      "side": 1,
      "message": "I\u0027m not a libcper maintainer, but you can\u0027t just move things this way (which I suspect is why Ed hasn\u0027t got around to fixing it). If this is merged you break every app whose build depends on libcper.",
      "revId": "28e0a9efd200ba287c8ab503c33a69d770d94d4e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1d18415d_17a34db9",
        "filename": "meson.build",
        "patchSetId": 2
      },
      "lineNbr": 140,
      "author": {
        "id": 1000945
      },
      "writtenOn": "2024-10-16T23:09:14Z",
      "side": 1,
      "message": "Do you have any suggestion to install those headers? I think installing the header directly to /usr/include can create many potential issue.\nIt is also hard to include the libcper header.",
      "parentUuid": "5f6b0181_84fce1dd",
      "revId": "28e0a9efd200ba287c8ab503c33a69d770d94d4e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fbc53947_0591b958",
        "filename": "meson.build",
        "patchSetId": 2
      },
      "lineNbr": 140,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-10-16T23:42:19Z",
      "side": 1,
      "message": "The headers will need to be reachable from both paths for a deprecation period. Install the header files at the new paths and have the old paths symlink to the new paths. At that point you deprecate use of the old paths as part of the API. Then you need to fix all the applications depending on libcper to use the new paths. Then once you\u0027re confident that\u0027s done, you can remove the symlink installation from the install target.",
      "parentUuid": "1d18415d_17a34db9",
      "revId": "28e0a9efd200ba287c8ab503c33a69d770d94d4e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f5a853eb_711c3b2b",
        "filename": "meson.build",
        "patchSetId": 2
      },
      "lineNbr": 140,
      "author": {
        "id": 1000945
      },
      "writtenOn": "2024-10-17T01:43:06Z",
      "side": 1,
      "message": "That\u0027s sound great. I will wait for the feedback from Maintainer before updating the path set.",
      "parentUuid": "fbc53947_0591b958",
      "revId": "28e0a9efd200ba287c8ab503c33a69d770d94d4e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e610ca9e_2b3b6aec",
        "filename": "meson.build",
        "patchSetId": 2
      },
      "lineNbr": 140,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-10-17T17:36:24Z",
      "side": 1,
      "message": "There are no upstream applications using libcper at this time though.\n\n```\n$ rg libcper\nmeta-phosphor/recipes-phosphor/libcper/libcper_git.bb\n13:SRC_URI \u003d \"git://github.com/openbmc/libcper.git;protocol\u003dhttps;branch\u003dmain\"\n```",
      "parentUuid": "f5a853eb_711c3b2b",
      "revId": "28e0a9efd200ba287c8ab503c33a69d770d94d4e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e38fd889_c135b2bb",
        "filename": "meson.build",
        "patchSetId": 2
      },
      "lineNbr": 140,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-10-17T23:03:47Z",
      "side": 1,
      "message": "I don\u0027t think it\u0027s worth having a migration period.  Nothing except for the built-in cli app is using this code yet, and it\u0027s so new, I can\u0027t imagine anyone is truly looking at it to the point where they wouldn\u0027t be able to handle a minor header move.  FWIW, the install code was added when we ported this to meson a few months ago.  It hasn\u0027t existed long enough that I suspect a lot of folks are relying on it.\n\nLets just move it to the right place and be done with it.",
      "parentUuid": "e610ca9e_2b3b6aec",
      "revId": "28e0a9efd200ba287c8ab503c33a69d770d94d4e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e6cdf846_9c78c85e",
        "filename": "meson.build",
        "patchSetId": 2
      },
      "lineNbr": 162,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-10-17T17:36:24Z",
      "side": 1,
      "message": "Wouldn\u0027t it be easier to combine these with the first `install_headers` and set `preserve_path\u003dTrue`?  That\u0027s what we do in libpldm also.  \n\nhttps://mesonbuild.com/Reference-manual_functions.html#install_headers_preserve_path",
      "range": {
        "startLine": 142,
        "startChar": 0,
        "endLine": 162,
        "endChar": 72
      },
      "revId": "28e0a9efd200ba287c8ab503c33a69d770d94d4e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}