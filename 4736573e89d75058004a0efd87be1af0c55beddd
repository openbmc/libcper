{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "fff37096_c0587048",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-07-10T00:49:29Z",
      "side": 1,
      "message": "Why?  Is there a pointer to documentation?",
      "revId": "4736573e89d75058004a0efd87be1af0c55beddd",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b831d53f_ace43a53",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-07-11T03:14:11Z",
      "side": 1,
      "message": "Do we know why this doesn\u0027t cause unit tests failures every time?  Is there randomization somewhere that we need to explicitly allow a seed for?",
      "revId": "4736573e89d75058004a0efd87be1af0c55beddd",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1c7c6fe5_313d2407",
        "filename": "cper-parse.c",
        "patchSetId": 1
      },
      "lineNbr": 338,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-07-11T03:13:24Z",
      "side": 1,
      "message": "Take a look at the encoded_size() function here:\nhttps://www.boost.org/doc/libs/1_68_0/boost/beast/core/detail/base64.hpp\n\nWe need the equivalent here, and it doesn\u0027t look like the base64 library we have provides one, so we\u0027ll have to invent one, but it should be identical to the one I linked.",
      "range": {
        "startLine": 338,
        "startChar": 25,
        "endLine": 338,
        "endChar": 58
      },
      "revId": "4736573e89d75058004a0efd87be1af0c55beddd",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}